name: test workflow

on:
 push:
   branches:
     - main

env:
  CLEAR_ON_TEST_FAILURE: false
  CLEAR_RESOURCES: ture

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    outputs:
      clear: ${{ steps.errorhandling.outputs.clear }}
    steps:
      - name: apitest
        id: execution
        continue-on-error: true
        run: |
          exit 1
      - name: Error handling
        id: errorhandling
        if: ${{ steps.execution.outcome == 'failure' }}
        run: |
          echo "CLEAR_RESOURCES=${{ env.CLEAR_ON_TEST_FAILURE }}" >> $GITHUB_ENV
          echo ${{ env.CLEAR_RESOURCES }}
          echo "::set-output name=clear::${{ env.CLEAR_ON_TEST_FAILURE }}"
          exit 1
  result:
    name: result
    runs-on: ubuntu-latest
    if: ${{ always() && needs.test.outputs.clear != 'false' }}
    needs: test
    steps:
      - name: result
        run: |
          echo ${{ env.CLEAR_RESOURCES }}
          echo ${{needs.test.outputs.clear}}
          echo ${{needs.test.outputs.clear}} != 'false'
  result2:
    name: result2
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: test
    steps:
      - name: result
        run: |
          echo ${{ env.CLEAR_RESOURCES }}
          echo ${{needs.test.outputs.clear}}
          echo ${{needs.test.outputs.clear}} != 'false'
    
   



